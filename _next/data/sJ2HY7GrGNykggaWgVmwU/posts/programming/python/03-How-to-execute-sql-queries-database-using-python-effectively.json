{"pageProps":{"post":{"title":"How to execute SQL queries (Select, Update, Insert, Delete) effectively using Python?","excerpt":"The database is an integral part of most software applications. We always try to find out what is the best way to connect to the database. Often use readily available frameworks. The one thing I have experienced often frameworks or libraries provide a lot of abstractions to make it easy for end developers to use the framework or library.","createdAt":"2021-05-03","author":{"name":"Manoj Pawar","permalink":"/authors/manoj-pawar","profilePictureUrl":"/images/manoj-pawar.jpg","slug":"manoj-pawar"},"body":"<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <p>The database is an integral part of most software applications. We always try to find out what is the best way to connect to the database. Often use readily available frameworks. The one thing I have experienced often frameworks or library provide a lot of abstractions to make it easy for end developers to use the framework or library. But this abstraction most of the time cost more resource consumptions. So, I was looking for a high-level lightweight framework or library with minimum abstraction. I do not find a framework or library that suits my expectations and then I have started implementing my own library named <strong>Python-Jdbc</strong>. Let me walk you through my approach to handling the maintainability and reusability of the code with minimal abstraction.</p>\n    <p>I have defined an abstract class <code class=\"language-unknown\">Connector</code> which has an abstract method <code class=\"language-unknown\">get_connection()</code>. It acts as a database connector. We can implement the Connector class based on our database systems like MySQL, Oracle etc.</p>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-python  line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">class</span><span class=\"token space\"> </span><span class=\"token class-name\">Connector</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">def</span><span class=\"token space\"> </span><span class=\"token function\">get_connection</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token triple-quoted-string string\">\"\"\"It<span class=\"token space\"> </span>is<span class=\"token space\"> </span>abstract<span class=\"token space\"> </span>method.<span class=\"token space\"> </span>The<span class=\"token space\"> </span>implementing<span class=\"token space\"> </span>class<span class=\"token space\"> </span>must<span class=\"token space\"> </span>return<span class=\"token space\"> </span>the<span class=\"token space\"> </span>connection<span class=\"token space\"> </span>object.\"\"\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">pass</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token decorator annotation punctuation\">@staticmethod</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">def</span><span class=\"token space\"> </span><span class=\"token function\">errors_type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token triple-quoted-string string\">\"\"\"It<span class=\"token space\"> </span>is<span class=\"token space\"> </span>an<span class=\"token space\"> </span>abstract<span class=\"token space\"> </span>method.<span class=\"token space\"> </span>The<span class=\"token space\"> </span>implementing<span class=\"token space\"> </span>class<span class=\"token space\"> </span>must<span class=\"token space\"> </span>return<span class=\"token space\"> </span>the<span class=\"token space\"> </span>class<span class=\"token space\"> </span>extending<span class=\"token space\"> </span>Exception\"\"\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">pass</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <p>Now the most important part is to handle the database CRUD operation in a more generic way to achieve maintainability and reusability. I have defined a class <code class=\"language-unknown\">JdbcTemplate</code> which required constructor dependency of the <code class=\"language-unknown\">Connector</code> implementation class instance. It has the following methods,</p>\n    <ul>\n      <li><strong><code class=\"language-unknown\">query_for_tuple</code></strong>: It executes query and returns database record as a tuple.</li>\n      <li><strong><code class=\"language-unknown\">query_for_tuple_list</code></strong>: It executes query and returns database records as a list of tuples.</li>\n      <li><strong><code class=\"language-unknown\">query_for_dict</code></strong>: It executes query and returns database record as a dictionary where the key is the name of the column and value is the actual value of the column.</li>\n      <li><strong><code class=\"language-unknown\">query_for_dict_list</code></strong>: It executes query and returns database record as a list of dictionar, where the key is the name of the column and value is the actual value of the column.</li>\n      <li><strong><code class=\"language-unknown\">update</code></strong>: To execute the Insert, Update and Delete queries. It returns the last row id.</li>\n    </ul>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-python  line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span><span class=\"token space\"> </span>logging<span class=\"token space\"> </span><span class=\"token keyword\">as</span><span class=\"token space\"> </span>log<span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">from</span><span class=\"token space\"> </span>jdbc<span class=\"token punctuation\">.</span>connector<span class=\"token space\"> </span><span class=\"token keyword\">import</span><span class=\"token space\"> </span>Connector<span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span>ERROR_LOG_MSG<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token string\">\"error<span class=\"token space\"> </span>'%s'<span class=\"token space\"> </span>occurred<span class=\"token space\"> </span>while<span class=\"token space\"> </span>executing<span class=\"token space\"> </span>%s<span class=\"token space\"> </span>query\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">class</span><span class=\"token space\"> </span><span class=\"token class-name\">JdbcTemplate</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">def</span><span class=\"token space\"> </span><span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>connector<span class=\"token punctuation\">:</span><span class=\"token space\"> </span>Connector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>connector<span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">def</span><span class=\"token space\"> </span><span class=\"token function\">query_for_tuple</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>query<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>parameters<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token triple-quoted-string string\">\"\"\"It<span class=\"token space\"> </span>executes<span class=\"token space\"> </span>query<span class=\"token space\"> </span>and<span class=\"token space\"> </span>returns<span class=\"token space\"> </span>database<span class=\"token space\"> </span>record<span class=\"token space\"> </span>as<span class=\"token space\"> </span>a<span class=\"token space\"> </span>tuple.\"\"\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>connection<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">.</span>get_connection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>cursor<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>create_and_execute_cursor<span class=\"token punctuation\">(</span>connection<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>query<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>parameters<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>row<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>cursor<span class=\"token punctuation\">.</span>fetchone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">return</span><span class=\"token space\"> </span>row<span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">except</span><span class=\"token space\"> </span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">.</span>errors_type<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token keyword\">as</span><span class=\"token space\"> </span>e<span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>log<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>ERROR_LOG_MSG<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>e<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>query<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>exc_info<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">return</span><span class=\"token space\"> </span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>close_cursor<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>cursor<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>close_connection<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>connection<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">def</span><span class=\"token space\"> </span><span class=\"token function\">query_for_tuple_list</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>query<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>parameters<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token triple-quoted-string string\">\"\"\"It<span class=\"token space\"> </span>executes<span class=\"token space\"> </span>query<span class=\"token space\"> </span>and<span class=\"token space\"> </span>returns<span class=\"token space\"> </span>database<span class=\"token space\"> </span>records<span class=\"token space\"> </span>as<span class=\"token space\"> </span>a<span class=\"token space\"> </span>list<span class=\"token space\"> </span>of<span class=\"token space\"> </span>tuples.\"\"\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>connection<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">.</span>get_connection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>cursor<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>create_and_execute_cursor<span class=\"token punctuation\">(</span>connection<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>query<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>parameters<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">return</span><span class=\"token space\"> </span>cursor<span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">except</span><span class=\"token space\"> </span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">.</span>errors_type<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token keyword\">as</span><span class=\"token space\"> </span>e<span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>log<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>ERROR_LOG_MSG<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>e<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>query<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>exc_info<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">return</span><span class=\"token space\"> </span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>close_cursor<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>cursor<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>close_connection<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>connection<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">def</span><span class=\"token space\"> </span><span class=\"token function\">query_for_dict</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>query<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>parameters<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token triple-quoted-string string\">\"\"\"It<span class=\"token space\"> </span>executes<span class=\"token space\"> </span>query<span class=\"token space\"> </span>and<span class=\"token space\"> </span>returns<span class=\"token space\"> </span>database<span class=\"token space\"> </span>record<span class=\"token space\"> </span>as<span class=\"token space\"> </span>a<span class=\"token space\"> </span>dictionary.\"\"\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>connection<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">.</span>get_connection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>cursor<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>create_and_execute_cursor<span class=\"token punctuation\">(</span>connection<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>query<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>parameters<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>fields<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token punctuation\">[</span>field_md<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token space\"> </span><span class=\"token keyword\">for</span><span class=\"token space\"> </span>field_md<span class=\"token space\"> </span><span class=\"token keyword\">in</span><span class=\"token space\"> </span>cursor<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">]</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">return</span><span class=\"token space\"> </span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>cursor<span class=\"token punctuation\">.</span>fetchone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">except</span><span class=\"token space\"> </span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">.</span>errors_type<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token keyword\">as</span><span class=\"token space\"> </span>e<span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>log<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>ERROR_LOG_MSG<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>e<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>query<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>exc_info<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">return</span><span class=\"token space\"> </span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>close_cursor<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>cursor<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>close_connection<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>connection<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">def</span><span class=\"token space\"> </span><span class=\"token function\">query_for_dict_list</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>query<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>parameters<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token triple-quoted-string string\">\"\"\"It<span class=\"token space\"> </span>executes<span class=\"token space\"> </span>query<span class=\"token space\"> </span>and<span class=\"token space\"> </span>returns<span class=\"token space\"> </span>database<span class=\"token space\"> </span>record<span class=\"token space\"> </span>as<span class=\"token space\"> </span>a<span class=\"token space\"> </span>list<span class=\"token space\"> </span>of<span class=\"token space\"> </span>dictionary.\"\"\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>connection<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">.</span>get_connection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>cursor<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>create_and_execute_cursor<span class=\"token punctuation\">(</span>connection<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>query<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>parameters<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>fields<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token punctuation\">[</span>field_md<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token space\"> </span><span class=\"token keyword\">for</span><span class=\"token space\"> </span>field_md<span class=\"token space\"> </span><span class=\"token keyword\">in</span><span class=\"token space\"> </span>cursor<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">]</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">return</span><span class=\"token space\"> </span><span class=\"token punctuation\">[</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token keyword\">for</span><span class=\"token space\"> </span>row<span class=\"token space\"> </span><span class=\"token keyword\">in</span><span class=\"token space\"> </span>cursor<span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">except</span><span class=\"token space\"> </span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">.</span>errors_type<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token keyword\">as</span><span class=\"token space\"> </span>e<span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>log<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>ERROR_LOG_MSG<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>e<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>query<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>exc_info<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">return</span><span class=\"token space\"> </span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>close_cursor<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>cursor<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>close_connection<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>connection<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">def</span><span class=\"token space\"> </span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>query<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>parameters<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token triple-quoted-string string\">\"\"\"It<span class=\"token space\"> </span>executes<span class=\"token space\"> </span>insert,<span class=\"token space\"> </span>update<span class=\"token space\"> </span>queries.\"\"\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>connection<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">.</span>get_connection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>cursor<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>create_and_execute_cursor<span class=\"token punctuation\">(</span>connection<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>query<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>parameters<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>connection<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">return</span><span class=\"token space\"> </span>cursor<span class=\"token punctuation\">.</span>lastrowid<span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">except</span><span class=\"token space\"> </span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">.</span>errors_type<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token keyword\">as</span><span class=\"token space\"> </span>e<span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>log<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>ERROR_LOG_MSG<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>e<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>query<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>exc_info<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">return</span><span class=\"token space\"> </span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>close_cursor<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>cursor<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>close_connection<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>database_connector<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>connection<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">def</span><span class=\"token space\"> </span><span class=\"token function\">create_and_execute_cursor</span><span class=\"token punctuation\">(</span>connection<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>query<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>parameters<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>cursor<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>connection<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span>prepared<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">if</span><span class=\"token space\"> </span><span class=\"token keyword\">not</span><span class=\"token space\"> </span>parameters<span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>parameters<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">return</span><span class=\"token space\"> </span>cursor<span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">def</span><span class=\"token space\"> </span><span class=\"token function\">close_connection</span><span class=\"token punctuation\">(</span>connector<span class=\"token punctuation\">:</span><span class=\"token space\"> </span>Connector<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>connection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token triple-quoted-string string\">\"\"\"It<span class=\"token space\"> </span>closes<span class=\"token space\"> </span>the<span class=\"token space\"> </span>database<span class=\"token space\"> </span>connection.\"\"\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">if</span><span class=\"token space\"> </span>connection<span class=\"token space\"> </span><span class=\"token keyword\">is</span><span class=\"token space\"> </span><span class=\"token keyword\">not</span><span class=\"token space\"> </span><span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>connection<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">except</span><span class=\"token space\"> </span>connector<span class=\"token punctuation\">.</span>errors_type<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token keyword\">as</span><span class=\"token space\"> </span>e<span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>log<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">\"error<span class=\"token space\"> </span>occurred<span class=\"token space\"> </span>while<span class=\"token space\"> </span>closing<span class=\"token space\"> </span>connection<span class=\"token space\"> </span>\"</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span>e<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>exc_info<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">def</span><span class=\"token space\"> </span><span class=\"token function\">close_cursor</span><span class=\"token punctuation\">(</span>connector<span class=\"token punctuation\">:</span><span class=\"token space\"> </span>Connector<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>cursor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token triple-quoted-string string\">\"\"\"It<span class=\"token space\"> </span>closes<span class=\"token space\"> </span>the<span class=\"token space\"> </span>database<span class=\"token space\"> </span>cursor\"\"\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">if</span><span class=\"token space\"> </span>cursor<span class=\"token space\"> </span><span class=\"token keyword\">is</span><span class=\"token space\"> </span><span class=\"token keyword\">not</span><span class=\"token space\"> </span><span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>cursor<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">except</span><span class=\"token space\"> </span>connector<span class=\"token punctuation\">.</span>errors_type<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token keyword\">as</span><span class=\"token space\"> </span>e<span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>log<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">\"error<span class=\"token space\"> </span>occurred<span class=\"token space\"> </span>while<span class=\"token space\"> </span>closing<span class=\"token space\"> </span>cursor<span class=\"token space\"> </span>\"</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span>e<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>exc_info<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <p>The <code class=\"language-unknown\">MySQLConnector</code> class inherits the superclass <code class=\"language-unknown\">Connector</code>. It provides the implements with the abstract method <code class=\"language-unknown\">get_connection()</code> to return the database connection.</p>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-python  line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span><span class=\"token space\"> </span>jdbc<span class=\"token punctuation\">.</span>connector<span class=\"token space\"> </span><span class=\"token keyword\">import</span><span class=\"token space\"> </span>Connector<span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">from</span><span class=\"token space\"> </span>mysql<span class=\"token punctuation\">.</span>connector<span class=\"token punctuation\">.</span>errors<span class=\"token space\"> </span><span class=\"token keyword\">import</span><span class=\"token space\"> </span>Error<span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">from</span><span class=\"token space\"> </span>mysql<span class=\"token punctuation\">.</span>connector<span class=\"token punctuation\">.</span>pooling<span class=\"token space\"> </span><span class=\"token keyword\">import</span><span class=\"token space\"> </span>MySQLConnectionPool<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>PooledMySQLConnection<span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">class</span><span class=\"token space\"> </span><span class=\"token class-name\">MySQLConnector</span><span class=\"token punctuation\">(</span>Connector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">def</span><span class=\"token space\"> </span><span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>config<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>pool_name<span class=\"token operator\">=</span><span class=\"token string\">\"default_pool\"</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span>pool_size<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>self<span class=\"token punctuation\">.</span>__connPool<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>MySQLConnectionPool<span class=\"token punctuation\">(</span>pool_name<span class=\"token operator\">=</span>pool_name<span class=\"token punctuation\">,</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token operator\">**</span>config<span class=\"token punctuation\">,</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>pool_size<span class=\"token operator\">=</span>pool_size<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">def</span><span class=\"token space\"> </span><span class=\"token function\">get_connection</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token space\"> </span>PooledMySQLConnection<span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token triple-quoted-string string\">\"\"\"It<span class=\"token space\"> </span>returns<span class=\"token space\"> </span>the<span class=\"token space\"> </span>PooledMySQLConnection<span class=\"token space\"> </span>object\"\"\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">return</span><span class=\"token space\"> </span>self<span class=\"token punctuation\">.</span>__connPool<span class=\"token punctuation\">.</span>get_connection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token decorator annotation punctuation\">@staticmethod</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">def</span><span class=\"token space\"> </span><span class=\"token function\">errors_type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token triple-quoted-string string\">\"\"\"It<span class=\"token space\"> </span>returns<span class=\"token space\"> </span>the<span class=\"token space\"> </span>mysql.connector.errors.Error\"\"\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">return</span><span class=\"token space\"> </span>Error<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <p>As we see above implementation is lightweight and provides very minimal abstraction. Let's see how can use our application to perform CURD operation on the database.</p>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-python  line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span><span class=\"token space\"> </span>jdbc<span class=\"token punctuation\">.</span>mysql_connector<span class=\"token space\"> </span><span class=\"token keyword\">import</span><span class=\"token space\"> </span>MySQLConnector<span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">from</span><span class=\"token space\"> </span>jdbc<span class=\"token punctuation\">.</span>template<span class=\"token space\"> </span><span class=\"token keyword\">import</span><span class=\"token space\"> </span>JdbcTemplate<span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span>config<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token punctuation\">{</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token string\">\"host\"</span><span class=\"token punctuation\">:</span><span class=\"token space\"> </span><span class=\"token string\">\"goprogramminghub.com\"</span><span class=\"token punctuation\">,</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token string\">\"port\"</span><span class=\"token punctuation\">:</span><span class=\"token space\"> </span><span class=\"token number\">3306</span><span class=\"token punctuation\">,</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token string\">\"database\"</span><span class=\"token punctuation\">:</span><span class=\"token space\"> </span><span class=\"token string\">\"goprogramminghub\"</span><span class=\"token punctuation\">,</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">:</span><span class=\"token space\"> </span><span class=\"token string\">\"goprogramminghub_user\"</span><span class=\"token punctuation\">,</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">:</span><span class=\"token space\"> </span><span class=\"token string\">\"\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token punctuation\">}</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token comment\">#<span class=\"token space\"> </span>initialize<span class=\"token space\"> </span>MySQLConnector<span class=\"token space\"> </span>and<span class=\"token space\"> </span>JdbcTemplate<span class=\"token space\"> </span>once<span class=\"token space\"> </span>in<span class=\"token space\"> </span>program<span class=\"token space\"> </span>(in<span class=\"token space\"> </span>__init__.py)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span>mysql_conn<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>MySQLConnector<span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span>jdbcTemplate<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>JdbcTemplate<span class=\"token punctuation\">(</span>mysql_conn<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token comment\">#<span class=\"token space\"> </span>query<span class=\"token space\"> </span>to<span class=\"token space\"> </span>retrieve<span class=\"token space\"> </span>tuple</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span>jdbcTemplate<span class=\"token punctuation\">.</span>query_for_tuple<span class=\"token punctuation\">(</span><span class=\"token string\">\"select<span class=\"token space\"> </span>*<span class=\"token space\"> </span>from<span class=\"token space\"> </span>users<span class=\"token space\"> </span>where<span class=\"token space\"> </span>user_id<span class=\"token space\"> </span>=<span class=\"token space\"> </span>%s<span class=\"token space\"> </span>\"</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token punctuation\">(</span><span class=\"token number\">1234</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token comment\">#<span class=\"token space\"> </span>query<span class=\"token space\"> </span>to<span class=\"token space\"> </span>retrieve<span class=\"token space\"> </span>list<span class=\"token space\"> </span>of<span class=\"token space\"> </span>tuples</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span>jdbcTemplate<span class=\"token punctuation\">.</span>query_for_tuple_list<span class=\"token punctuation\">(</span><span class=\"token string\">\"select<span class=\"token space\"> </span>*<span class=\"token space\"> </span>from<span class=\"token space\"> </span>users<span class=\"token space\"> </span>where<span class=\"token space\"> </span>is_active<span class=\"token space\"> </span>=<span class=\"token space\"> </span>%s\"</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token comment\">#<span class=\"token space\"> </span>query<span class=\"token space\"> </span>to<span class=\"token space\"> </span>retrieve<span class=\"token space\"> </span>dictionary</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span>jdbcTemplate<span class=\"token punctuation\">.</span>query_for_dict<span class=\"token punctuation\">(</span><span class=\"token string\">\"select<span class=\"token space\"> </span>*<span class=\"token space\"> </span>from<span class=\"token space\"> </span>users<span class=\"token space\"> </span>where<span class=\"token space\"> </span>user_id<span class=\"token space\"> </span>=<span class=\"token space\"> </span>%s\"</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token punctuation\">(</span><span class=\"token number\">1234</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token comment\">#<span class=\"token space\"> </span>query<span class=\"token space\"> </span>to<span class=\"token space\"> </span>retrieve<span class=\"token space\"> </span>list<span class=\"token space\"> </span>of<span class=\"token space\"> </span>dictionary</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span>jdbcTemplate<span class=\"token punctuation\">.</span>query_for_dict_list<span class=\"token punctuation\">(</span><span class=\"token string\">\"select<span class=\"token space\"> </span>*<span class=\"token space\"> </span>from<span class=\"token space\"> </span>users<span class=\"token space\"> </span>where<span class=\"token space\"> </span>is_active<span class=\"token space\"> </span>=<span class=\"token space\"> </span>%s\"</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token comment\">#<span class=\"token space\"> </span>query<span class=\"token space\"> </span>to<span class=\"token space\"> </span>insert<span class=\"token space\"> </span>record</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span>jdbcTemplate<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token string\">\"Insert<span class=\"token space\"> </span>into<span class=\"token space\"> </span>users<span class=\"token space\"> </span>(first_nam,<span class=\"token space\"> </span>last_nam)<span class=\"token space\"> </span>values<span class=\"token space\"> </span>(%s,<span class=\"token space\"> </span>%s)\"</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Manoj\"</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token string\">\"Pawar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token comment\">#<span class=\"token space\"> </span>query<span class=\"token space\"> </span>to<span class=\"token space\"> </span>update<span class=\"token space\"> </span>record</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span>jdbcTemplate<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token string\">\"Update<span class=\"token space\"> </span>users<span class=\"token space\"> </span>set<span class=\"token space\"> </span>is_activev<span class=\"token space\"> </span>=<span class=\"token space\"> </span>%s<span class=\"token space\"> </span>where<span class=\"token space\"> </span>user_id<span class=\"token space\"> </span>=<span class=\"token space\"> </span>%s\"</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token number\">1234</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <p>You can find the full implementation of above code in the below Github URL,</p>\n    <blockquote>\n      <p><strong>Github Repository</strong>: <a href=\"https://github.com/manojpawar94/python-jdbc\">Python-Jdbc-Github-Repo</a></p>\n    </blockquote>\n  </body>\n</html>\n","slug":"03-How-to-execute-sql-queries-database-using-python-effectively"},"posts":[{"title":"Introduction to Python Language","excerpt":"Python is an easy to learn, powerful, object-oriented, high-level programming language. It is created by Guido van Rossum in 1991 and further developed by the Python Software Foundation.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/python/01-Introduction-to-Python","slug":"01-Introduction-to-Python"},{"title":"How to run the hello world program in the python?","excerpt":"Python is an interpreted programming language. We can run the Python code in the interactive mode or using the source code file.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/python/02-how-to-run-python-code","slug":"02-how-to-run-python-code"},{"title":"How to execute SQL queries (Select, Update, Insert, Delete) effectively using Python?","excerpt":"The database is an integral part of most software applications. We always try to find out what is the best way to connect to the database. Often use readily available frameworks. The one thing I have experienced often frameworks or libraries provide a lot of abstractions to make it easy for end developers to use the framework or library.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/python/03-How-to-execute-sql-queries-database-using-python-effectively","slug":"03-How-to-execute-sql-queries-database-using-python-effectively"}]},"__N_SSG":true}