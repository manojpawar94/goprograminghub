{"pageProps":{"post":{"title":"Codechef 01 : Problem Code: AGELIMIT","excerpt":"Chef wants to appear in a competitive exam. To take the exam, there are following requirements, Minimum age limit is X and Age should be strictly less than Y","createdAt":"2021-05-03","author":{"name":"Manoj Pawar","permalink":"/authors/manoj-pawar","profilePictureUrl":"/images/manoj-pawar.jpg","slug":"manoj-pawar"},"body":"<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <h4>Problem</h4>\n    <p>Chef wants to appear in a competitive exam. To take the exam, there are following requirements:</p>\n    <ul>\n      <li>Minimum age limit is X (i.e. Age should be greater than or equal to X).</li>\n      <li>Age should be strictly less than Y.</li>\n    </ul>\n    <p>Chef's current Age is AA. Find whether he is currently eligible to take the exam or not.</p>\n    <h5>Input Format</h5>\n    <ul>\n      <li>First line will contain TT, number of test cases. Then the test cases follow.</li>\n      <li>Each test case consists of a single line of input, containing three integers X, Y and A as mentioned in the statement.</li>\n    </ul>\n    <h5>Output Format</h5>\n    <ul>\n      <li>For each test case, output YES if Chef is eligible to give the exam, NO otherwise.</li>\n      <li>You may print each character of the string in uppercase or lowercase (for example, the strings YES, yEs, yes, and yeS will all be treated as identical).</li>\n    </ul>\n    <h5>Constraints</h5>\n    <blockquote>\n      <ul>\n        <li>1 ≤ T ≤ 1000</li>\n        <li>20 ≤ X &#x3C;Y ≤ 40</li>\n        <li>10 ≤ A ≤50</li>\n      </ul>\n    </blockquote>\n    <h5>Sample 1:</h5>\n    <table>\n      <thead>\n        <tr>\n          <th>Input</th>\n          <th>Output</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>5</td>\n          <td></td>\n        </tr>\n        <tr>\n          <td>21 34 30</td>\n          <td>YES</td>\n        </tr>\n        <tr>\n          <td>25 31 31</td>\n          <td>NO</td>\n        </tr>\n        <tr>\n          <td>22 29 25</td>\n          <td>YES</td>\n        </tr>\n        <tr>\n          <td>20 40 15</td>\n          <td>NO</td>\n        </tr>\n        <tr>\n          <td>28 29 28</td>\n          <td>YES</td>\n        </tr>\n      </tbody>\n    </table>\n    <h6>Explanation:</h6>\n    <p>Test case 11: The age of Chef is 30. His age satisfies the minimum age limit as 30 ≥ 21. Also, it is less than the upper limit as 30 &#x3C; 34. Thus, Chef is eligible to take the exam.</p>\n    <p>Test case 22: The age of Chef is 31. His age satisfies the minimum age limit as 31 ≥ 25. But, it is not less than the upper limit as 31 &#x3C; 31. Thus, Chef is not eligible to take the exam.</p>\n    <p>Test case 33: The age of Chef is 25. His age satisfies the minimum age limit as 25 ≥ 22. Also, it is less than the upper limit as 25 &#x3C; 29. Thus, Chef is eligible to take the exam.</p>\n    <p>Test case 44: The age of Chef is 15. His age does not satisfy the minimum age limit as 15 &#x3C; 20. Thus, Chef is not eligible to take the exam.</p>\n    <h4>Solution</h4><ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#home\" type=\"button\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Java</button>\n  </li>\n</ul>\n<div class=\"tab-content\" id=\"myTabContent\">\n  <div class=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\n    <div class=\"remark-highlight\">\n      <pre class=\"language-java  line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">import</span><span class=\"token space\"> </span><span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">class</span><span class=\"token space\"> </span><span class=\"token class-name\">Codechef</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token punctuation\">{</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">public</span><span class=\"token space\"> </span><span class=\"token keyword\">static</span><span class=\"token space\"> </span><span class=\"token keyword\">void</span><span class=\"token space\"> </span>main<span class=\"token space\"> </span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token space\"> </span>args<span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token keyword\">throws</span><span class=\"token space\"> </span><span class=\"token class-name\">Exception</span><span class=\"token space\"> </span><span class=\"token punctuation\">{</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token class-name\">Scanner</span><span class=\"token space\"> </span>in<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token keyword\">new</span><span class=\"token space\"> </span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token keyword\">int</span><span class=\"token space\"> </span>noOfTc<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token space\"> </span>index<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token space\"> </span>index<span class=\"token space\"> </span><span class=\"token operator\">&#x3C;</span><span class=\"token space\"> </span>noOfTc<span class=\"token punctuation\">;</span><span class=\"token space\"> </span>index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token punctuation\">{</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token tab\">\t</span><span class=\"token class-name\">String</span><span class=\"token space\"> </span>input<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token tab\">\t</span><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token punctuation\">{</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token tab\">\t</span><span class=\"token tab\">\t</span>input<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token tab\">\t</span><span class=\"token punctuation\">}</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token tab\">\t</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token space\"> </span>inputs<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>input<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token space\"> </span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token tab\">\t</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token tab\">\t</span><span class=\"token keyword\">int</span><span class=\"token space\"> </span>x<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>inputs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token tab\">\t</span><span class=\"token keyword\">int</span><span class=\"token space\"> </span>y<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>inputs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token tab\">\t</span><span class=\"token keyword\">int</span><span class=\"token space\"> </span>age<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>inputs<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token tab\">\t</span><span class=\"token keyword\">if</span><span class=\"token space\"> </span><span class=\"token punctuation\">(</span>age<span class=\"token space\"> </span><span class=\"token operator\">>=</span><span class=\"token space\"> </span>x<span class=\"token space\"> </span><span class=\"token operator\">&#x26;&#x26;</span><span class=\"token space\"> </span>age<span class=\"token space\"> </span><span class=\"token operator\">&#x3C;</span><span class=\"token space\"> </span>y<span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token punctuation\">{</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token tab\">\t</span><span class=\"token tab\">\t</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"YES\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token tab\">\t</span><span class=\"token punctuation\">}</span><span class=\"token space\"> </span><span class=\"token keyword\">else</span><span class=\"token space\"> </span><span class=\"token punctuation\">{</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token tab\">\t</span><span class=\"token tab\">\t</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NO\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token tab\">\t</span><span class=\"token punctuation\">}</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token tab\">\t</span><span class=\"token punctuation\">}</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token punctuation\">}</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <p>The provided Java code is a solution for the \"AGELIMIT\" problem on CodeChef. The problem involves determining whether a person is eligible to take an exam based on their age. Here's how the code works:</p>\n    <ol>\n      <li>The <code class=\"language-unknown\">main</code> method reads the number of test cases (<code class=\"language-unknown\">noOfTc</code>) from input.</li>\n      <li>For each test case, it reads a line of input containing three integers <code class=\"language-unknown\">X</code>, <code class=\"language-unknown\">Y</code>, and <code class=\"language-unknown\">A</code>.</li>\n      <li>The <code class=\"language-unknown\">while</code> loop is used to handle any empty lines in the input.</li>\n      <li>The input line is split using space as the delimiter, resulting in an array <code class=\"language-unknown\">inputs</code> containing the three values.</li>\n      <li>The integer values <code class=\"language-unknown\">x</code>, <code class=\"language-unknown\">y</code>, and <code class=\"language-unknown\">age</code> are parsed from the <code class=\"language-unknown\">inputs</code> array.</li>\n      <li>The code then checks if the age is greater than or equal to <code class=\"language-unknown\">x</code> and strictly less than <code class=\"language-unknown\">y</code>. If this condition is satisfied, it prints \"YES\". Otherwise, it prints \"NO\".</li>\n    </ol>\n    <p>The solution effectively processes the input test cases and determines whether the person is eligible to take the exam based on the given age limits.</p>\n    <p>Please note that this code assumes the input follows the provided format and does not include extensive error handling. It's also worth noting that the problem description specifies that 1 ≤ T ≤ 1000, 20 ≤ X &#x3C; Y ≤ 40, and 10 ≤ A ≤ 50.</p></div>\n</div>\n  </body>\n</html>\n","slug":"08-Codechef-01-problem-solviong-AGELIMIT"},"posts":[{"title":"LeetCode 01 : Two Sum","excerpt":"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/01-LeetCode-01-Problem-Two-Sum","index":0,"slug":"01-LeetCode-01-Problem-Two-Sum"},{"title":"LeetCode 02 : Add Two Numbers","excerpt":"You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/02-LeetCode-02-Problem-Add-Two-Numbers","index":1,"slug":"02-LeetCode-02-Problem-Add-Two-Numbers"},{"title":"LeetCode 03 : Longest Substring Without Repeating Characters","excerpt":"Given a string s, find the length of the longest substring without repeating characters.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/03-LeetCode-03-Problem-Longest-Substring-Without-Repeating-Characters","index":2,"slug":"03-LeetCode-03-Problem-Longest-Substring-Without-Repeating-Characters"},{"title":"LeetCode 04 : Container With Most Water","excerpt":"You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/04-LeetCode-04-Problem-Container-With-Most-Water","index":3,"slug":"04-LeetCode-04-Problem-Container-With-Most-Water"},{"title":"LeetCode 05 : Remove Duplicates from Sorted Array","excerpt":"Given an integer array nums sorted in non-decreasing order, remove the duplicates in-place such that each unique element appears only once. The relative order of the elements should be kept the same.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/05-LeetCode-05-Problem-Remove-Duplicates-from-Sorted-Array","index":4,"slug":"05-LeetCode-05-Problem-Remove-Duplicates-from-Sorted-Array"},{"title":"LeetCode 06 : Maximum Subarray","excerpt":"Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/06-LeetCode-06-Problem-Maximum-Subarray","index":5,"slug":"06-LeetCode-06-Problem-Maximum-Subarray"},{"title":"LeetCode 07 : Contains Duplicate","excerpt":"Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/07-LeetCode-07-Problem-Contains-Duplicate","index":6,"slug":"07-LeetCode-07-Problem-Contains-Duplicate"},{"title":"Codechef 01 : Problem Code: AGELIMIT","excerpt":"Chef wants to appear in a competitive exam. To take the exam, there are following requirements, Minimum age limit is X and Age should be strictly less than Y","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/08-Codechef-01-problem-solviong-AGELIMIT","index":7,"slug":"08-Codechef-01-problem-solviong-AGELIMIT"},{"title":"Codechef 02 : Problem Code: BURGERS","excerpt":"Chef is fond of burgers and decided to make as many burgers as possible. Chef has A patties and B buns. To make 1 burger, Chef needs 1 patty and 1 bun. Find the maximum number of burgers that Chef can make.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/09-Codechef-02-problem-solviong-BURGERS","index":8,"slug":"09-Codechef-02-problem-solviong-BURGERS"}],"index":8},"__N_SSG":true}