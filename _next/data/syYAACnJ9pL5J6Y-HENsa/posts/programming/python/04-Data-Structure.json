{"pageProps":{"post":{"title":"Data Structure","excerpt":"Python is an interpreted programming language. We can run the Python code in the interactive mode or using the source code file.","createdAt":"2021-05-03","author":{"name":"Manoj Pawar","permalink":"/authors/manoj-pawar","profilePictureUrl":"/images/manoj-pawar.jpg","slug":"manoj-pawar"},"body":"<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <h3>Lists, Tuples, and Sets:</h3>\n    <h4>Lists:</h4>\n    <p>Lists are versatile and dynamic containers that store a collection of items, which can be of various types. Lists are created using square brackets <code class=\"language-unknown\">[]</code>.</p>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-python  line-numbers\"><code class=\"language-python\">fruits<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token punctuation\">[</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token string\">\"cherry\"</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <p>You can access and manipulate individual items in a list by their indices.</p>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-python  line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token comment\">#<span class=\"token space\"> </span>Outputs:<span class=\"token space\"> </span>apple</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span>fruits<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"orange\"</span><span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token comment\">#<span class=\"token space\"> </span>Adds<span class=\"token space\"> </span>\"orange\"<span class=\"token space\"> </span>to<span class=\"token space\"> </span>the<span class=\"token space\"> </span>end<span class=\"token space\"> </span>of<span class=\"token space\"> </span>the<span class=\"token space\"> </span>list</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span>fruits<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token comment\">#<span class=\"token space\"> </span>Removes<span class=\"token space\"> </span>\"banana\"<span class=\"token space\"> </span>from<span class=\"token space\"> </span>the<span class=\"token space\"> </span>list</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <h4>Tuples:</h4>\n    <p>Tuples are similar to lists but are immutable, meaning their contents cannot be changed after creation. Tuples are created using parentheses <code class=\"language-unknown\">()</code>.</p>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-python  line-numbers\"><code class=\"language-python\">coordinates<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <p>Tuples are often used to group related information together.</p>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-python  line-numbers\"><code class=\"language-python\">x<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>y<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>coordinates<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <h4>Sets:</h4>\n    <p>Sets are unordered collections of unique elements. They are created using curly braces <code class=\"language-unknown\">{}</code>.</p>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-python  line-numbers\"><code class=\"language-python\">unique_numbers<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token number\">4</span><span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <p>Sets are useful for tasks like finding unique values in a list and performing set operations like union and intersection.</p>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-python  line-numbers\"><code class=\"language-python\">set1<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span>set2<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span>union_set<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>set1<span class=\"token punctuation\">.</span>union<span class=\"token punctuation\">(</span>set2<span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token comment\">#<span class=\"token space\"> </span>Combines<span class=\"token space\"> </span>unique<span class=\"token space\"> </span>elements<span class=\"token space\"> </span>from<span class=\"token space\"> </span>both<span class=\"token space\"> </span>sets</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span>intersection_set<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span>set1<span class=\"token punctuation\">.</span>intersection<span class=\"token punctuation\">(</span>set2<span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token comment\">#<span class=\"token space\"> </span>Finds<span class=\"token space\"> </span>common<span class=\"token space\"> </span>elements<span class=\"token space\"> </span>between<span class=\"token space\"> </span>sets</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <h3>Dictionaries (Key-Value Pairs):</h3>\n    <p>Dictionaries are collections of key-value pairs. Each key maps to a specific value. Dictionaries are created using curly braces <code class=\"language-unknown\">{}</code> and colons <code class=\"language-unknown\">:</code> to separate keys from values.</p>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-python  line-numbers\"><code class=\"language-python\">student<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span><span class=\"token space\"> </span><span class=\"token string\">\"Alice\"</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span><span class=\"token space\"> </span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token string\">\"grade\"</span><span class=\"token punctuation\">:</span><span class=\"token space\"> </span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <p>You can access values in a dictionary using their keys.</p>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-python  line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token comment\">#<span class=\"token space\"> </span>Outputs:<span class=\"token space\"> </span>Alice</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span>student<span class=\"token punctuation\">[</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">]</span><span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token number\">21</span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token comment\">#<span class=\"token space\"> </span>Updates<span class=\"token space\"> </span>the<span class=\"token space\"> </span>age<span class=\"token space\"> </span>value</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span>student<span class=\"token punctuation\">[</span><span class=\"token string\">\"city\"</span><span class=\"token punctuation\">]</span><span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token string\">\"New<span class=\"token space\"> </span>York\"</span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token comment\">#<span class=\"token space\"> </span>Adds<span class=\"token space\"> </span>a<span class=\"token space\"> </span>new<span class=\"token space\"> </span>key-value<span class=\"token space\"> </span>pair</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <h3>Basic Operations on Data Structures:</h3>\n    <p>Common operations you can perform on data structures include:</p>\n    <ul>\n      <li><strong>Length:</strong> You can find the number of elements in a data structure using the <code class=\"language-unknown\">len()</code> function.</li>\n    </ul>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-python  line-numbers\"><code class=\"language-python\">num_fruits<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token comment\">#<span class=\"token space\"> </span>Length<span class=\"token space\"> </span>of<span class=\"token space\"> </span>the<span class=\"token space\"> </span>fruits<span class=\"token space\"> </span>list</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <ul>\n      <li><strong>Membership Check:</strong> You can check if an item exists in a data structure using the <code class=\"language-unknown\">in</code> keyword.</li>\n    </ul>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-python  line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">if</span><span class=\"token space\"> </span><span class=\"token string\">\"apple\"</span><span class=\"token space\"> </span><span class=\"token keyword\">in</span><span class=\"token space\"> </span>fruits<span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Apple<span class=\"token space\"> </span>is<span class=\"token space\"> </span>in<span class=\"token space\"> </span>the<span class=\"token space\"> </span>fruits<span class=\"token space\"> </span>list.\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <ul>\n      <li><strong>Iteration:</strong> You can loop through the elements of a data structure using loops.</li>\n    </ul>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-python  line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">for</span><span class=\"token space\"> </span>fruit<span class=\"token space\"> </span><span class=\"token keyword\">in</span><span class=\"token space\"> </span>fruits<span class=\"token punctuation\">:</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fruit<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <ul>\n      <li><strong>Sorting:</strong> You can sort elements in a data structure.</li>\n    </ul>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-python  line-numbers\"><code class=\"language-python\">sorted_fruits<span class=\"token space\"> </span><span class=\"token operator\">=</span><span class=\"token space\"> </span><span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token comment\">#<span class=\"token space\"> </span>Returns<span class=\"token space\"> </span>a<span class=\"token space\"> </span>sorted<span class=\"token space\"> </span>list<span class=\"token space\"> </span>of<span class=\"token space\"> </span>fruits</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <h3>Explanation:</h3>\n    <ul>\n      <li>\n        <p><strong>Lists, Tuples, and Sets:</strong> Lists are mutable collections, tuples are immutable collections, and sets are collections of unique elements. Each has its own use case, depending on whether you need flexibility, immutability, or uniqueness.</p>\n      </li>\n      <li>\n        <p><strong>Dictionaries:</strong> Dictionaries store data as key-value pairs, enabling efficient lookup and storage of related information.</p>\n      </li>\n      <li>\n        <p><strong>Basic Operations:</strong> Length, membership checks, iteration, and sorting are some fundamental operations you can perform on data structures to manipulate and manage their contents.</p>\n      </li>\n    </ul>\n    <p>These data structures empower you to organize, store, and manipulate data effectively, forming the building blocks of complex data processing in Python.</p>\n  </body>\n</html>\n","slug":"04-Data-Structure"},"posts":[{"title":"Introduction to Python","excerpt":"Python is an easy to learn, powerful, object-oriented, high-level programming language. It is created by Guido van Rossum in 1991 and further developed by the Python Software Foundation.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/python/01-Introduction-to-Python","index":0,"slug":"01-Introduction-to-Python"},{"title":"Basic of Python","excerpt":"Python is an interpreted programming language. We can run the Python code in the interactive mode or using the source code file.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/python/02-Basic-of-Python","index":1,"slug":"02-Basic-of-Python"},{"title":"Control Statement","excerpt":"Python is an interpreted programming language. We can run the Python code in the interactive mode or using the source code file.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/python/03-Control-Statement","index":2,"slug":"03-Control-Statement"},{"title":"Data Structure","excerpt":"Python is an interpreted programming language. We can run the Python code in the interactive mode or using the source code file.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/python/04-Data-Structure","index":3,"slug":"04-Data-Structure"},{"title":"How to execute SQL queries (Select, Update, Insert, Delete) effectively using Python?","excerpt":"The database is an integral part of most software applications. We always try to find out what is the best way to connect to the database. Often use readily available frameworks. The one thing I have experienced often frameworks or libraries provide a lot of abstractions to make it easy for end developers to use the framework or library.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/python/How-to-execute-sql-queries-database-using-python-effectively","index":4,"slug":"How-to-execute-sql-queries-database-using-python-effectively"}],"index":4},"__N_SSG":true}