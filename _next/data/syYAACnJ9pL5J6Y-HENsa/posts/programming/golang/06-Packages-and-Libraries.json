{"pageProps":{"post":{"title":"Packages and Libraries","excerpt":"Explore the modular nature of GoLang through packages and libraries. Learn how to import and utilize external code to enhance your programs.","createdAt":"2021-05-03","author":{"name":"Manoj Pawar","permalink":"/authors/manoj-pawar","profilePictureUrl":"/images/manoj-pawar.jpg","slug":"manoj-pawar"},"body":"<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <blockquote>\n      <p>Unveiling the Modularity with Packages and Libraries in GoLang</p>\n    </blockquote>\n    <p>Welcome to Packages and Libraries tutorial! Here, we're about to dive into the world of packages and libraries - the backbone of modularity in Go programming. Think of packages as neatly organized boxes that hold related code, and libraries as collections of these boxes that you can use to enhance your programs. In this chapter, you'll uncover the art of importing and employing external code to elevate your coding game.</p>\n    <h4>Understanding Packages and Their Importance</h4>\n    <p>Imagine you're organizing your tools into different boxes - one for screws, another for nuts, and so on. Similarly, packages in GoLang are like those boxes, neatly organizing related functions, types, and variables. They promote clean code organization and reusability.</p>\n    <p><strong>Example 1: Creating and Using a Package</strong></p>\n    <p>Imagine you have a file named <code class=\"language-unknown\">math_operations.go</code> containing the following code:</p>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-go  line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">package</span><span class=\"token space\"> </span>math_operations<span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token comment\">//<span class=\"token space\"> </span>Function<span class=\"token space\"> </span>to<span class=\"token space\"> </span>add<span class=\"token space\"> </span>two<span class=\"token space\"> </span>numbers</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">func</span><span class=\"token space\"> </span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>b<span class=\"token space\"> </span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token builtin\">int</span><span class=\"token space\"> </span><span class=\"token punctuation\">{</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token keyword\">return</span><span class=\"token space\"> </span>a<span class=\"token space\"> </span><span class=\"token operator\">+</span><span class=\"token space\"> </span>b<span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <p>Now, in another file <code class=\"language-unknown\">main.go</code>, you can use this package:</p>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-go  line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">package</span><span class=\"token space\"> </span>main<span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">import</span><span class=\"token space\"> </span><span class=\"token punctuation\">(</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token string\">\"fmt\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token string\">\"yourmodulepath/math_operations\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">func</span><span class=\"token space\"> </span><span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token punctuation\">{</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>sum<span class=\"token space\"> </span><span class=\"token operator\">:=</span><span class=\"token space\"> </span>math_operations<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sum:\"</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span>sum<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <p>In this example, the <code class=\"language-unknown\">math_operations</code> package is imported, and the <code class=\"language-unknown\">Add</code> function from this package is used in the <code class=\"language-unknown\">main()</code> function.</p>\n    <h4>Exploring Libraries and Their Impact</h4>\n    <p>Libraries are like toolboxes filled with multiple packages that can be used to enhance your programs. They save you time and effort by providing pre-built solutions to common problems.</p>\n    <p><strong>Example 2: Using the <code class=\"language-unknown\">fmt</code> Library</strong></p>\n    <p>The <code class=\"language-unknown\">fmt</code> library is a standard library in GoLang that provides functions for formatting text and printing to the console.</p>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-go  line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">package</span><span class=\"token space\"> </span>main<span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">import</span><span class=\"token space\"> </span><span class=\"token string\">\"fmt\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">func</span><span class=\"token space\"> </span><span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token punctuation\">{</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>name<span class=\"token space\"> </span><span class=\"token operator\">:=</span><span class=\"token space\"> </span><span class=\"token string\">\"Alice\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>age<span class=\"token space\"> </span><span class=\"token operator\">:=</span><span class=\"token space\"> </span><span class=\"token number\">30</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello,<span class=\"token space\"> </span>my<span class=\"token space\"> </span>name<span class=\"token space\"> </span>is<span class=\"token space\"> </span>%s<span class=\"token space\"> </span>and<span class=\"token space\"> </span>I<span class=\"token space\"> </span>am<span class=\"token space\"> </span>%d<span class=\"token space\"> </span>years<span class=\"token space\"> </span>old.\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span>name<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>age<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <p>In this example, we import the <code class=\"language-unknown\">fmt</code> library and use the <code class=\"language-unknown\">Printf</code> function to format and print a message.</p>\n    <h4>Leveraging Third-Party Libraries</h4>\n    <p>GoLang has a rich ecosystem of third-party libraries that can be imported and used in your projects to save time and effort.</p>\n    <p><strong>Example 3: Using the <code class=\"language-unknown\">http</code> Library for Simple Server</strong></p>\n    <p>Here's a simple example using the <code class=\"language-unknown\">http</code> library to create a basic web server:</p>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-go  line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">package</span><span class=\"token space\"> </span>main<span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">import</span><span class=\"token space\"> </span><span class=\"token punctuation\">(</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token string\">\"fmt\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token string\">\"net/http\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">func</span><span class=\"token space\"> </span><span class=\"token function\">handler</span><span class=\"token punctuation\">(</span>w<span class=\"token space\"> </span>http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span><span class=\"token space\"> </span>r<span class=\"token space\"> </span><span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token punctuation\">{</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprint</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token string\">\"Hello,<span class=\"token space\"> </span>Go<span class=\"token space\"> </span>Web<span class=\"token space\"> </span>Server!\"</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token punctuation\">}</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">func</span><span class=\"token space\"> </span><span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token space\"> </span><span class=\"token punctuation\">{</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>http<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span>handler<span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>http<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":8080\"</span><span class=\"token punctuation\">,</span><span class=\"token space\"> </span><span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <p>In this example, we import the <code class=\"language-unknown\">net/http</code> library to handle HTTP requests and responses. The <code class=\"language-unknown\">handler</code> function is used to respond to incoming requests, and the server is started using <code class=\"language-unknown\">ListenAndServe</code>.</p>\n    <p>By the end of this chapter, you'll have embraced the power of packages and libraries in GoLang. You've learned how to create your packages, leverage standard libraries, and harness the strength of third-party libraries. These tools will empower you to create efficient, modular, and feature-rich programs with ease. It's time to embrace the modular nature of GoLang and level up your programming game!</p>\n  </body>\n</html>\n","slug":"06-Packages-and-Libraries"},"posts":[{"title":"Introduction to Go Language","excerpt":"Understand the origins and motivations behind the creation of GoLang. Set up your development environment with the necessary tools and components.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/01-Introduction-to-Go-Language","index":0,"slug":"01-Introduction-to-Go-Language"},{"title":"Getting Acquainted with Go","excerpt":"Explore the basic syntax and structure of Go programs. Learn how to write your first \"Hello, World!\" program.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/02-Getting-Acquainted-with-Go","index":1,"slug":"02-Getting-Acquainted-with-Go"},{"title":"Variables and Data Types","excerpt":"Grasp the concept of variables and their role in programming. Discover the various data types available in GoLang and how to use them effectively.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/03-Variables-and-Data-Types","index":2,"slug":"03-Variables-and-Data-Types"},{"title":"Control Structures","excerpt":"Dive into control structures like loops and conditional statements. Learn how to manipulate program flow to achieve desired outcomes.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/04-Control-Structures","index":3,"slug":"04-Control-Structures"},{"title":"Functions","excerpt":"Understand the significance of functions in Go programming. Learn how to define and use functions to organize and streamline your code.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/05-Functions","index":4,"slug":"05-Functions"},{"title":"Packages and Libraries","excerpt":"Explore the modular nature of GoLang through packages and libraries. Learn how to import and utilize external code to enhance your programs.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/06-Packages-and-Libraries","index":5,"slug":"06-Packages-and-Libraries"},{"title":"Pointers and Memory Management","excerpt":"Delve into the concepts of pointers and memory management in Go. Understand how Go's memory allocation works and how to work with pointers effectively.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/07-Pointers-and-Memory-Management","index":6,"slug":"07-Pointers-and-Memory-Management"},{"title":"Structs and Interfaces","excerpt":"Learn about struct types and how they facilitate structured data organization. Grasp the concept of interfaces and their role in achieving polymorphism in Go.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/08-Structs-and-Interfaces","index":7,"slug":"08-Structs-and-Interfaces"},{"title":"Concurrency","excerpt":"Understand Go's unique approach to concurrency through goroutines and channels. Learn how to create concurrent programs that leverage the full power of modern hardware. ","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/09-Concurrency","index":8,"slug":"09-Concurrency"},{"title":"Error Handling","excerpt":"Explore techniques for handling errors and exceptional scenarios in GoLang. Learn how to design robust code that gracefully manages unexpected situations.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/10-Error-Handling","index":9,"slug":"10-Error-Handling"},{"title":"File Handling","excerpt":"Discover how to work with files and I/O operations in Go. Learn how to read from and write to files, enhancing the functionality of your programs.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/11-File-Handling","index":10,"slug":"11-File-Handling"},{"title":"Advanced Topics","excerpt":"Explore more advanced topics such as reflection, embedding, and advanced concurrency patterns. This chapter offers a glimpse into the broader capabilities of GoLang for those looking to deepen their expertise.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/12-Advanced-Topics","index":11,"slug":"12-Advanced-Topics"}],"index":6},"__N_SSG":true}