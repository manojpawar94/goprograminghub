{"pageProps":{"post":{"title":"Getting Acquainted with Go","excerpt":"Explore the basic syntax and structure of Go programs. Learn how to write your first \"Hello, World!\" program.","createdAt":"2021-05-03","author":{"name":"Manoj Pawar","permalink":"/authors/manoj-pawar","profilePictureUrl":"/images/manoj-pawar.jpg","slug":"manoj-pawar"},"body":"<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <p>\n      Let's discuss the Go Program structure using the hello world program.\n      Go program has the same structure as other programming languages,\n    </p>\n    <ul>\n      <li>define the package name</li>\n      <li>import require packages</li>\n      <li>define global variable/constant (optional)</li>\n      <li>define functions</li>\n    </ul>\n    <h4>Hello World Program</h4>\n    <p>The <code class=\"language-unknown\">main()</code> function is the program execution entry point for the Go program.</p>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-go  line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">package</span><span class=\"token space\"> </span>main<span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">import</span><span class=\"token space\"> </span><span class=\"token string\">\"fmt\"</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token keyword\">func</span><span class=\"token space\"> </span><span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span><span class=\"token space\"> </span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello,<span class=\"token space\"> </span>World\"</span><span class=\"token punctuation\">)</span><span class=\"token lf\"></span>\n<span class=\"token lf\"></span><span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span><span class=\"\"></span></span>\n</code></pre>\n    </div>\n    <p>Let's create a new file, copy the below code snippet and save it as <code class=\"language-unknown\">main.go</code>.</p>\n    <ul>\n      <li>The very first line of the program declares the main package. A package is a way to group functions. Unlike Java, a package name must define on the first line of the file. All the files in the same directory belong to the same package.</li>\n      <li>Followed by you need to import the required packages. Here, we have imported the popular <code class=\"language-unknown\">fmt</code> package, which contains functions for formatting text, including printing on the console. This package is one of the standard library packages you got when you installed Go.</li>\n      <li>Then you have implemented the <code class=\"language-unknown\">main()</code> function to print a message to the console. The <code class=\"language-unknown\">main()</code> function executes by default when you run the main package.</li>\n    </ul>\n    <p><strong>Note:</strong></p>\n    <ul>\n      <li>In the Go program, we don't need to use enclosing semi-comma.</li>\n    </ul>\n    <h4>Execute Go Program</h4>\n    <p>To execute the above code, you should run the command <code class=\"language-unknown\">go run main.go</code> on the terminal or CMD. It will run the <code class=\"language-unknown\">main()</code> function and print the below output on the console.</p>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">$<span class=\"token space\"> </span>go<span class=\"token space\"> </span>run<span class=\"token space\"> </span>main.go<span class=\"token lf\"></span>\n<span class=\"token lf\"></span>Hello,<span class=\"token space\"> </span>World\n</code></pre>\n    </div>\n  </body>\n</html>\n","slug":"02-Getting-Acquainted-with-Go"},"posts":[{"title":"Introduction to Go Language","excerpt":"Understand the origins and motivations behind the creation of GoLang. Set up your development environment with the necessary tools and components.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/01-Introduction-to-Go-Language","index":0,"slug":"01-Introduction-to-Go-Language"},{"title":"Getting Acquainted with Go","excerpt":"Explore the basic syntax and structure of Go programs. Learn how to write your first \"Hello, World!\" program.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/02-Getting-Acquainted-with-Go","index":1,"slug":"02-Getting-Acquainted-with-Go"},{"title":"Variables and Data Types","excerpt":"Grasp the concept of variables and their role in programming. Discover the various data types available in GoLang and how to use them effectively.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/03-Variables-and-Data-Types","index":2,"slug":"03-Variables-and-Data-Types"},{"title":"Control Structures","excerpt":"Dive into control structures like loops and conditional statements. Learn how to manipulate program flow to achieve desired outcomes.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/04-Control-Structures","index":3,"slug":"04-Control-Structures"},{"title":"Functions","excerpt":"Understand the significance of functions in Go programming. Learn how to define and use functions to organize and streamline your code.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/05-Functions","index":4,"slug":"05-Functions"},{"title":"Packages and Libraries","excerpt":"Explore the modular nature of GoLang through packages and libraries. Learn how to import and utilize external code to enhance your programs.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/06-Packages-and-Libraries","index":5,"slug":"06-Packages-and-Libraries"},{"title":"Pointers and Memory Management","excerpt":"Delve into the concepts of pointers and memory management in Go. Understand how Go's memory allocation works and how to work with pointers effectively.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/07-Pointers-and-Memory-Management","index":6,"slug":"07-Pointers-and-Memory-Management"},{"title":"Structs and Interfaces","excerpt":"Learn about struct types and how they facilitate structured data organization. Grasp the concept of interfaces and their role in achieving polymorphism in Go.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/08-Structs-and-Interfaces","index":7,"slug":"08-Structs-and-Interfaces"},{"title":"Concurrency","excerpt":"Understand Go's unique approach to concurrency through goroutines and channels. Learn how to create concurrent programs that leverage the full power of modern hardware. ","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/09-Concurrency","index":8,"slug":"09-Concurrency"},{"title":"Error Handling","excerpt":"Explore techniques for handling errors and exceptional scenarios in GoLang. Learn how to design robust code that gracefully manages unexpected situations.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/10-Error-Handling","index":9,"slug":"10-Error-Handling"},{"title":"File Handling","excerpt":"Discover how to work with files and I/O operations in Go. Learn how to read from and write to files, enhancing the functionality of your programs.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/11-File-Handling","index":10,"slug":"11-File-Handling"},{"title":"Advanced Topics","excerpt":"Explore more advanced topics such as reflection, embedding, and advanced concurrency patterns. This chapter offers a glimpse into the broader capabilities of GoLang for those looking to deepen their expertise.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/programming/golang/12-Advanced-Topics","index":11,"slug":"12-Advanced-Topics"}],"index":2},"__N_SSG":true}