{"pageProps":{"post":{"title":"Codechef 01 : Problem Code: BURGERS","excerpt":"Chef is fond of burgers and decided to make as many burgers as possible. Chef has A patties and B buns. To make 1 burger, Chef needs 1 patty and 1 bun. Find the maximum number of burgers that Chef can make.","createdAt":"2021-05-03","author":{"name":"Manoj Pawar","permalink":"/authors/manoj-pawar","profilePictureUrl":"/images/manoj-pawar.jpg","slug":"manoj-pawar"},"body":"<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <h4>Problem</h4>\n    <p>Chef is fond of burgers and decided to make as many burgers as possible. Chef has A patties and B buns. To make 1 burger, Chef needs 1 patty and 1 bun.</p>\n    <p>Find the maximum number of burgers that Chef can make.</p>\n    <h5>Input Format</h5>\n    <ul>\n      <li>The first line of input will contain an integer TT — the number of test cases. The description of T test cases follows.</li>\n      <li>The first and only line of each test case contains two space-separated integers A and B, the number of patties and buns respectively.</li>\n    </ul>\n    <h5>Output Format</h5>\n    <p>For each test case, output the maximum number of burgers that Chef can make.</p>\n    <h5>Constraints</h5>\n    <blockquote>\n      <ul>\n        <li>1 ≤ T ≤ 1000</li>\n        <li>1 ≤ A, B ≤ 10^5</li>\n      </ul>\n    </blockquote>\n    <h5>Sample 1:</h5>\n    <table>\n      <thead>\n        <tr>\n          <th>Input</th>\n          <th>Output</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>4</td>\n          <td></td>\n        </tr>\n        <tr>\n          <td>2 2</td>\n          <td>2</td>\n        </tr>\n        <tr>\n          <td>2 3</td>\n          <td>2</td>\n        </tr>\n        <tr>\n          <td>3 2</td>\n          <td>2</td>\n        </tr>\n        <tr>\n          <td>23 17</td>\n          <td>17</td>\n        </tr>\n      </tbody>\n    </table>\n    <h6>Explanation:</h6>\n    <p>\n      Explanation:\n      Test case 1: Chef has 2 patties and 2 buns, and therefore Chef can make 2 burgers.\n    </p>\n    <p>Test case 2: Chef has 2 patties and 3 buns. Chef can make at most 2 burgers by using 2 patties and 2 buns.</p>\n    <p>Test case 3: Chef has 3 patties and 2 buns. Chef can make at most 2 burgers by using 2 patties and 2 buns.</p>\n    <p>Test case 4: Chef has 23 patties and 17 buns. Chef can make at most 17 burgers by using 17 patties and 17 buns.</p>\n    <h4>Solution</h4><ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#home\" type=\"button\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Java</button>\n  </li>\n</ul>\n<div class=\"tab-content\" id=\"myTabContent\">\n  <div class=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\n    <div class=\"remark-highlight\">\n      <pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Codechef</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> main <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">int</span> noOfTc <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>noOfTc<span class=\"token operator\">--</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">int</span> patties <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">int</span> buns <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>patties <span class=\"token operator\">></span> buns <span class=\"token operator\">?</span> buns <span class=\"token operator\">:</span> patties<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n    </div></div>\n</div>\n  </body>\n</html>\n","slug":"Codechef-02-problem-solviong-BURGERS"},"posts":[{"title":"Codechef 01 : Problem Code: AGELIMIT","excerpt":"Chef wants to appear in a competitive exam. To take the exam, there are following requirements, Minimum age limit is X and Age should be strictly less than Y","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/Codechef-01-problem-solviong-AGELIMIT","slug":"Codechef-01-problem-solviong-AGELIMIT"},{"title":"Codechef 01 : Problem Code: BURGERS","excerpt":"Chef is fond of burgers and decided to make as many burgers as possible. Chef has A patties and B buns. To make 1 burger, Chef needs 1 patty and 1 bun. Find the maximum number of burgers that Chef can make.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/Codechef-02-problem-solviong-BURGERS","slug":"Codechef-02-problem-solviong-BURGERS"},{"title":"LeetCode 01 : Two Sum","excerpt":"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/LeetCode-01-Problem-Two-Sum","slug":"LeetCode-01-Problem-Two-Sum"},{"title":"LeetCode 02 : Add Two Numbers","excerpt":"You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/LeetCode-02-Problem-Add-Two-Numbers","slug":"LeetCode-02-Problem-Add-Two-Numbers"},{"title":"LeetCode 03 : Longest Substring Without Repeating Characters","excerpt":"Given a string s, find the length of the longest substring without repeating characters.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/LeetCode-03-Problem-Longest-Substring-Without-Repeating-Characters","slug":"LeetCode-03-Problem-Longest-Substring-Without-Repeating-Characters"}]},"__N_SSG":true}