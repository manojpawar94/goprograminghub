{"pageProps":{"post":{"title":"LeetCode 01 : Two Sum","excerpt":"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.","createdAt":"2021-05-03","author":{"name":"Manoj Pawar","permalink":"/authors/manoj-pawar","profilePictureUrl":"/images/manoj-pawar.jpg","slug":"manoj-pawar"},"body":"<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <h4>Problem</h4>\n    <p>Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.</p>\n    <p>You may assume that each input would have exactly one solution, and you may not use the same element twice.</p>\n    <p>You can return the answer in any order.</p>\n    <h5>Example 1:</h5>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">Input: nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2,7</span>,11,15<span class=\"token punctuation\">]</span>, target <span class=\"token operator\">=</span> <span class=\"token number\">9</span>\nOutput: <span class=\"token punctuation\">[</span><span class=\"token number\">0,1</span><span class=\"token punctuation\">]</span>\nExplanation: Because nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> + nums<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">9</span>, we <span class=\"token builtin class-name\">return</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span>, <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>.\n</code></pre>\n    </div>\n    <h5>Example 2:</h5>\n    <div class=\"remark-highlight\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">Input: nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3,2</span>,4<span class=\"token punctuation\">]</span>, target <span class=\"token operator\">=</span> <span class=\"token number\">6</span>\nOutput: <span class=\"token punctuation\">[</span><span class=\"token number\">1,2</span><span class=\"token punctuation\">]</span>\n</code></pre>\n    </div>\n    <h5>Constraints</h5>\n    <blockquote>\n      <ul>\n        <li>2 &#x3C;= nums.length &#x3C;= 104</li>\n        <li>-109 &#x3C;= nums[i] &#x3C;= 109</li>\n        <li>-109 &#x3C;= target &#x3C;= 109</li>\n        <li>Only one valid answer exists.</li>\n      </ul>\n    </blockquote>\n    <p><strong>Follow-up:</strong> Can you come up with an algorithm that is less than O(n2) time complexity?</p>\n    <h4>Solution</h4><ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#home\" type=\"button\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Java</button>\n  </li>\n</ul>\n<div class=\"tab-content\" id=\"myTabContent\">\n  <div class=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\n    <div class=\"remark-highlight\">\n      <pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">twoSum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n      <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> lookup <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index <span class=\"token operator\">&#x3C;</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">int</span> complement <span class=\"token operator\">=</span> target <span class=\"token operator\">-</span> nums<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lookup<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span>complement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span> lookup<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>complement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> index <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n\n          lookup<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n    </div></div>\n</div>\n  </body>\n</html>\n","slug":"LeetCode-01-Problem-Two-Sum"},"posts":[{"title":"Codechef 01 : Problem Code: AGELIMIT","excerpt":"Chef wants to appear in a competitive exam. To take the exam, there are following requirements, Minimum age limit is X and Age should be strictly less than Y","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/Codechef-01-problem-solviong-AGELIMIT","slug":"Codechef-01-problem-solviong-AGELIMIT"},{"title":"Codechef 02 : Problem Code: BURGERS","excerpt":"Chef is fond of burgers and decided to make as many burgers as possible. Chef has A patties and B buns. To make 1 burger, Chef needs 1 patty and 1 bun. Find the maximum number of burgers that Chef can make.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/Codechef-02-problem-solviong-BURGERS","slug":"Codechef-02-problem-solviong-BURGERS"},{"title":"LeetCode 01 : Two Sum","excerpt":"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/LeetCode-01-Problem-Two-Sum","slug":"LeetCode-01-Problem-Two-Sum"},{"title":"LeetCode 02 : Add Two Numbers","excerpt":"You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/LeetCode-02-Problem-Add-Two-Numbers","slug":"LeetCode-02-Problem-Add-Two-Numbers"},{"title":"LeetCode 03 : Longest Substring Without Repeating Characters","excerpt":"Given a string s, find the length of the longest substring without repeating characters.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/LeetCode-03-Problem-Longest-Substring-Without-Repeating-Characters","slug":"LeetCode-03-Problem-Longest-Substring-Without-Repeating-Characters"},{"title":"LeetCode 04 : Container With Most Water","excerpt":"You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/LeetCode-04-Problem-Container-With-Most-Water","slug":"LeetCode-04-Problem-Container-With-Most-Water"},{"title":"LeetCode 05 : Remove Duplicates from Sorted Array","excerpt":"Given an integer array nums sorted in non-decreasing order, remove the duplicates in-place such that each unique element appears only once. The relative order of the elements should be kept the same.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/LeetCode-05-Problem-Remove-Duplicates-from-Sorted-Array","slug":"LeetCode-05-Problem-Remove-Duplicates-from-Sorted-Array"},{"title":"LeetCode 06 : Maximum Subarray","excerpt":"Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/LeetCode-06-Problem-Maximum-Subarray","slug":"LeetCode-06-Problem-Maximum-Subarray"},{"title":"LeetCode 07 : Contains Duplicate","excerpt":"Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.","createdAt":"2021-05-03","author":"manoj-pawar","permalink":"/posts/problemsolving/LeetCode-07-Problem-Contains-Duplicate","slug":"LeetCode-07-Problem-Contains-Duplicate"}]},"__N_SSG":true}